export default [
  {
    language: 'clojure',
    scopeName: 'source.clojure',
    path: './clojure.tmLanguage.json',
  },
  {
    language: 'coffeescript',
    scopeName: 'source.coffee',
    path: './coffeescript.tmLanguage.json',
  },
  { language: 'c', scopeName: 'source.c', path: './cpp.tmLanguage.json' },
  {
    language: 'csharp',
    scopeName: 'source.cs',
    path: './csharp.tmLanguage.json',
  },
  {
    language: 'css',
    scopeName: 'source.css',
    path: './css.tmLanguage.json',
    tokenTypes: { 'meta.function.url string.quoted': 'other' },
  },
  {
    language: 'dart',
    scopeName: 'source.dart',
    path: './dart.tmLanguage.json',
  },
  {
    language: 'fsharp',
    scopeName: 'source.fsharp',
    path: './fsharp.tmLanguage.json',
  },
  { language: 'go', scopeName: 'source.go', path: './go.tmLanguage.json' },
  {
    language: 'groovy',
    scopeName: 'source.groovy',
    path: './groovy.tmLanguage.json',
  },
  {
    scopeName: 'text.html.basic',
    path: './html.tmLanguage.json',
    embeddedLanguages: {
      'text.html': 'html',
      'source.css': 'css',
      'source.js': 'javascript',
      'source.python': 'python',
      'source.smarty': 'smarty',
    },
    tokenTypes: { 'meta.tag string.quoted': 'other' },
  },
  {
    language: 'java',
    scopeName: 'source.java',
    path: './java.tmLanguage.json',
  },
  {
    language: 'javascriptreact',
    scopeName: 'source.js.jsx',
    path: './javascript.tmLanguage.json',
    embeddedLanguages: {
      'meta.tag.js': 'jsx-tags',
      'meta.tag.without-attributes.js': 'jsx-tags',
      'meta.tag.attributes.js.jsx': 'javascriptreact',
      'meta.embedded.expression.js': 'javascriptreact',
    },
    tokenTypes: {
      'meta.template.expression': 'other',
      'meta.template.expression string': 'string',
      'meta.template.expression comment': 'comment',
      'entity.name.type.instance.jsdoc': 'other',
      'entity.name.function.tagged-template': 'other',
      'meta.import string.quoted': 'other',
      'variable.other.jsdoc': 'other',
    },
  },
  {
    language: 'json',
    scopeName: 'source.json',
    path: './json.tmLanguage.json',
  },
  {
    language: 'julia',
    scopeName: 'source.julia',
    path: './julia.tmLanguage.json',
    embeddedLanguages: {
      'meta.embedded.inline.cpp': 'cpp',
      'meta.embedded.inline.javascript': 'javascript',
      'meta.embedded.inline.python': 'python',
      'meta.embedded.inline.r': 'r',
      'meta.embedded.inline.sql': 'sql',
    },
  },
  {
    language: 'less',
    scopeName: 'source.css.less',
    path: './less.tmLanguage.json',
  },
  {
    language: 'lua',
    scopeName: 'source.lua',
    path: './lua.tmLanguage.json',
    tokenTypes: { 'comment.line.double-dash.doc.lua': 'other' },
  },
  {
    language: 'perl',
    scopeName: 'source.perl',
    path: './perl.tmLanguage.json',
    unbalancedBracketScopes: ['variable.other.predefined.perl'],
  },
  { language: 'php', scopeName: 'source.php', path: './php.tmLanguage.json' },
  {
    language: 'powershell',
    scopeName: 'source.powershell',
    path: './powershell.tmLanguage.json',
  },
  { language: 'jade', scopeName: 'text.pug', path: './pug.tmLanguage.json' },
  {
    language: 'python',
    scopeName: 'source.python',
    path: './python.tmLanguage.json',
  },
  { language: 'r', scopeName: 'source.r', path: './r.tmLanguage.json' },
  {
    language: 'ruby',
    scopeName: 'source.ruby',
    path: './ruby.tmLanguage.json',
  },
  {
    language: 'rust',
    path: './rust.tmLanguage.json',
    scopeName: 'source.rust',
  },
  {
    language: 'scss',
    scopeName: 'source.css.scss',
    path: './scss.tmLanguage.json',
  },
  {
    language: 'shaderlab',
    path: './shaderlab.tmLanguage.json',
    scopeName: 'source.shaderlab',
  },
  {
    language: 'shellscript',
    scopeName: 'source.shell',
    path: './shellscript.tmLanguage.json',
    balancedBracketScopes: ['*'],
    unbalancedBracketScopes: ['meta.scope.case-pattern.shell'],
  },
  { language: 'sql', scopeName: 'source.sql', path: './sql.tmLanguage.json' },
  {
    language: 'swift',
    scopeName: 'source.swift',
    path: './swift.tmLanguage.json',
  },
  {
    language: 'typescript',
    scopeName: 'source.ts',
    path: './typescript.tmLanguage.json',
    unbalancedBracketScopes: [
      'keyword.operator.relational',
      'storage.type.function.arrow',
      'keyword.operator.bitwise.shift',
      'meta.brace.angle',
      'punctuation.definition.tag',
      'keyword.operator.assignment.compound.bitwise.ts',
    ],
    tokenTypes: {
      'meta.template.expression': 'other',
      'meta.template.expression string': 'string',
      'meta.template.expression comment': 'comment',
      'entity.name.type.instance.jsdoc': 'other',
      'entity.name.function.tagged-template': 'other',
      'meta.import string.quoted': 'other',
      'variable.other.jsdoc': 'other',
    },
  },
  {
    language: 'vb',
    scopeName: 'source.asp.vb.net',
    path: './vb.tmLanguage.json',
  },
  { language: 'xml', scopeName: 'text.xml', path: './xml.tmLanguage.json' },
  {
    language: 'dockercompose',
    scopeName: 'source.yaml',
    path: './yaml.tmLanguage.json',
  },
]
